--- /usr/share/sailfish-browser/pages/components/ToolBar.qml	2017-11-28 20:31:27.266967140 +0000
+++ /usr/share/sailfish-browser/pages/components/ToolBar.qml	2017-11-28 18:22:15.880346035 +0000
@@ -94,73 +94,6 @@
         height: browserPage.isPortrait ? scaledPortraitHeight : scaledLandscapeHeight
 
         // Container item for cross fading tabs, close, find in page button (and keep Row's width still).
-        Item {
-            id: tabButton
-
-            width: toolBarRow.iconWidth + toolBarRow.horizontalOffset
-            height: parent.height
-
-            Browser.TabButton {
-                id: tabs
-
-                opacity: secondaryToolsActive || findInPageActive ? 0.0 : 1.0
-                horizontalOffset: toolBarRow.horizontalOffset
-                label.text: webView.tabModel.count
-                onTapped: toolBarRow.showTabs()
-
-                RotationAnimator {
-                    id: rotationAnimator
-                    target: tabs.icon
-                    duration: 1500
-                    easing.type: Easing.InOutQuad
-                    alwaysRunToEnd: true
-                }
-
-                Connections {
-                    target: webView.tabModel
-                    onNewTabRequested: {
-                        // New tab request triggers 90 degrees clockwise rotation
-                        // for the tab icon.
-                        rotationAnimator.from = rotationAnimator.to
-                        rotationAnimator.to = rotationAnimator.from + 90
-                        rotationAnimator.restart()
-                    }
-
-                    onTabClosed: {
-                        // Counter closewise when closing.
-                        rotationAnimator.from = rotationAnimator.to
-                        rotationAnimator.to = rotationAnimator.from - 90
-                        rotationAnimator.restart()
-                    }
-                }
-            }
-
-            Browser.IconButton {
-                opacity: secondaryToolsActive && !findInPageActive ? 1.0 : 0.0
-                icon.source: "image://theme/icon-m-tab-close"
-                icon.anchors.horizontalCenterOffset: toolBarRow.horizontalOffset
-                active: webView.tabModel.count > 0
-                onTapped: closeActiveTab()
-            }
-
-            Browser.IconButton {
-                opacity: !secondaryToolsActive && findInPageActive ? 1.0 : 0.0
-                icon.source: "image://theme/icon-m-search"
-                icon.anchors.horizontalCenterOffset: toolBarRow.horizontalOffset
-                onTapped: {
-                    findInPageActive = true
-                    findInPage()
-                }
-            }
-        }
-
-        Browser.ExpandingButton {
-            id: backIcon
-            expandedWidth: toolBarRow.iconWidth
-            icon.source: "image://theme/icon-m-back"
-            active: webView.canGoBack && !toolBarRow.secondaryToolsActive && !findInPageActive
-            onTapped: webView.goBack()
-        }
 
         MouseArea {
             id: touchArea
@@ -181,7 +114,11 @@
 
             Label {
                 anchors.verticalCenter: parent.verticalCenter
-                width: parent.width + Theme.paddingMedium
+                anchors.left: parent.left
+                anchors.leftMargin: Theme.paddingLarge
+                anchors.right: parent.right
+                anchors.rightMargin: Theme.paddingLarge
+                width: Theme.paddingMedium + parent.width
                 color: touchArea.down ? Theme.highlightColor : Theme.primaryColor
 
                 text: {
@@ -201,12 +138,53 @@
                         return qsTrId("sailfish_browser-la-loading")
                     }
                 }
-
                 truncationMode: TruncationMode.Fade
 
                 opacity: showFindButtons ? 0.0 : 1.0
                 Behavior on opacity { FadeAnimation {} }
             }
+        }
+
+        Item {
+            id: menuButton
+
+            width: toolBarRow.iconWidth + toolBarRow.horizontalOffset
+            height: parent.height
+
+            Browser.IconButton {
+                icon.source: "image://theme/icon-m-menu"
+                icon.anchors.horizontalCenterOffset: -toolBarRow.horizontalOffset
+                width: parent.width
+                opacity: secondaryToolsActive || findInPageActive ? 0.0 : 1.0
+                onTapped: showSecondaryTools()
+            }
+
+            Browser.IconButton {
+                icon.source: "image://theme/icon-m-menu"
+                icon.anchors.horizontalCenterOffset: toolBarRow.horizontalOffset
+                width: parent.width
+                rotation: 180
+                opacity: secondaryToolsActive && !findInPageActive ? 1.0 : 0.0
+                onTapped: showChrome()
+            }
+
+            Browser.IconButton {
+                icon.source: "image://theme/icon-m-reset"
+                icon.anchors.horizontalCenterOffset: -toolBarRow.horizontalOffset
+                width: parent.width
+                opacity: !secondaryToolsActive && findInPageActive ? 1.0 : 0.0
+                onTapped: {
+                    resetFind()
+                    showChrome()
+                }
+            }
+        }
+        Browser.ExpandingButton {
+            id: backIcon
+            expandedWidth: toolBarRow.iconWidth
+            icon.source: "image://theme/icon-m-back"
+            active: webView.canGoBack && !toolBarRow.secondaryToolsActive && !findInPageActive
+            onTapped: webView.goBack()
 
             Browser.ExpandingButton {
                 id: previousFindResult
@@ -216,12 +194,10 @@
                     source: "image://theme/icon-m-left"
                     anchors.horizontalCenterOffset: Theme.paddingLarge
                 }
-
                 onTapped: {
                     webView.sendAsyncMessage("embedui:find", { text: findText, backwards: true, again: true })
                 }
             }
-
             Browser.ExpandingButton {
                 active: showFindButtons
                 expandedWidth: previousFindResult.width
@@ -230,54 +206,74 @@
                     source: "image://theme/icon-m-right"
                     anchors.horizontalCenterOffset: -Theme.paddingLarge
                 }
-
                 onTapped: {
                     webView.sendAsyncMessage("embedui:find", { text: findText, backwards: false, again: true })
                 }
             }
         }
 
-        Browser.ExpandingButton {
-            id: reloadButton
-            expandedWidth: toolBarRow.iconWidth
-            icon.source: webView.loading ? "image://theme/icon-m-reset" : "image://theme/icon-m-refresh"
-            active: webView.contentItem && !toolBarRow.secondaryToolsActive && !findInPageActive
-            onTapped: webView.loading ? webView.stop() : webView.reload()
-        }
-
         Item {
-            id: menuButton
+            id: tabButton
 
             width: toolBarRow.iconWidth + toolBarRow.horizontalOffset
             height: parent.height
 
-            Browser.IconButton {
-                icon.source: "image://theme/icon-m-menu"
-                icon.anchors.horizontalCenterOffset: -toolBarRow.horizontalOffset
-                width: parent.width
+            Browser.TabButton {
+                id: tabs
+
                 opacity: secondaryToolsActive || findInPageActive ? 0.0 : 1.0
-                onTapped: showSecondaryTools()
-            }
+                horizontalOffset: toolBarRow.horizontalOffset
+                label.text: webView.tabModel.count
+                onTapped: toolBarRow.showTabs()
 
-            Browser.IconButton {
-                icon.source: "image://theme/icon-m-menu"
-                icon.anchors.horizontalCenterOffset: toolBarRow.horizontalOffset
-                width: parent.width
-                rotation: 180
-                opacity: secondaryToolsActive && !findInPageActive ? 1.0 : 0.0
-                onTapped: showChrome()
+                RotationAnimator {
+                    id: rotationAnimator
+                    target: tabs.icon
+                    duration: 1500
+                    easing.type: Easing.InOutQuad
+                    alwaysRunToEnd: true
+                }
+                Connections {
+                    target: webView.tabModel
+                    onNewTabRequested: {
+                        // New tab request triggers 90 degrees clockwise rotation
+                        // for the tab icon.
+                        rotationAnimator.from = rotationAnimator.to
+                        rotationAnimator.to = rotationAnimator.from + 90
+                        rotationAnimator.restart()
+                    }
+                    onTabClosed: {
+                        // Counter closewise when closing.
+                        rotationAnimator.from = rotationAnimator.to
+                        rotationAnimator.to = rotationAnimator.from - 90
+                        rotationAnimator.restart()
+                    }
+                }
             }
-
             Browser.IconButton {
-                icon.source: "image://theme/icon-m-reset"
-                icon.anchors.horizontalCenterOffset: -toolBarRow.horizontalOffset
-                width: parent.width
                 opacity: !secondaryToolsActive && findInPageActive ? 1.0 : 0.0
+                icon.source: "image://theme/icon-m-search"
+                icon.anchors.horizontalCenterOffset: toolBarRow.horizontalOffset
                 onTapped: {
-                    resetFind()
-                    showChrome()
+                    findInPageActive = true
+                    findInPage()
                 }
             }
+            Browser.IconButton {
+                width: Theme.paddingLarge*3
+                opacity: secondaryToolsActive && !findInPageActive ? 1.0 : 0.0
+                icon.source: "image://theme/icon-m-tab-close"
+                icon.anchors.horizontalCenterOffset: toolBarRow.horizontalOffset
+                active: webView.tabModel.count > 0
+                onTapped: closeActiveTab()
+            }
+        }
+        Browser.ExpandingButton {
+            id: reloadButton
+            expandedWidth: toolBarRow.iconWidth
+            icon.source: webView.loading ? "image://theme/icon-m-reset" :"image://theme/icon-m-refresh"
+            active: webView.contentItem && !toolBarRow.secondaryToolsActive && !findInPageActive
+            onTapped: webView.loading ? webView.stop() : webView.reload()
         }
     }
 }
